# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1
commands:
    install_aws_cli:
      description: Install aws cli v2
      steps:
        - run: 
            name: Install aws cli v2
            command: |
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install

    install_aws_iam_auth:
      description: Installing or updating the latest version of aws-iam-authenticator
      steps:
        - run: 
            name: Installing or updating the latest version of aws-iam-authenticator
            command: |
              mkdir -p ~/downloads
              curl -o ~/downloads/aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
              chmod +x  ~/downloads/aws-iam-authenticator
              mkdir -p $HOME/bin && cp  ~/downloads/aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
              echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
              aws-iam-authenticator help

    install_kubectl:
      description: Installing Kubectl
      steps:
        - run: 
            name: Installing Kubectl
            command: |
              sudo apt-get install -y apt-transport-https
              sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
              echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
              sudo apt-get update
              sudo apt-get install -y kubectl

    install_helm:
      description: Installing Helm
      steps:
        - run: 
            name: Installing Helm
            command: |
              mkdir -p ~/downloads
              curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | /bin/bash
              helm version

    login-to-docker:
      description: login-to-docker
      steps:
        - run: 
            name: login-to-docker
            command: |
               echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
               docker --version # print the version for logging

    build-docker-images:
      description: build-docker-images
      steps:
        - run: 
            name: build-docker-images
            command: |
              docker build -t udagram-api-feed ./udagram-api-feed
              docker build -t udagram-api-user ./udagram-api-user
              docker build -t udagram-frontend ./udagram-frontend
              docker build -t reverseproxy ./udagram-reverseproxy
              docker tag udagram-api-feed omarali292020/udagram-api-feed:v4
              docker tag udagram-api-user omarali292020/udagram-api-user:v4
              docker tag udagram-frontend omarali292020/udagram-frontend:v4
              docker tag reverseproxy omarali292020/reverseproxy:v4

    push-docker-images:
      description: push-docker-images
      steps:
        - run: 
            name: push-docker-images
            command: |
              docker push omarali292020/udagram-api-feed:v4
              docker push omarali292020/udagram-api-user:v4
              docker push omarali292020/udagram-frontend:v4
              docker push omarali292020/reverseproxy:v4

    login-to-aws:
      description: Login to AWS
      steps:
        - run: 
            name: Login to AWS
            command: |
              aws configure set AWS_ACCESS_KEY_ID ${TF_VAR_AWS_ACCESS_KEY_ID}
              aws configure set AWS_SECRET_ACCESS_KEY ${TF_VAR_AWS_SECRET_ACCESS_KEY}
              aws configure set region ${TF_VAR_REGION}
              aws configure list
              aws sts get-caller-identity   

    configure_kubectl:
      description: Configure kubeconfig
      steps:
        - run: 
            name: Configure kubeconfig
            command: |
              aws eks update-kubeconfig --region ${TF_VAR_REGION} --name ${CLUSTER_NAME}

    get_cluster_info:
      description: get_cluster_info
      steps:
        - run: 
            name: get_cluster_info
            command: |              
              kubectl cluster-info dump

    deploy_k8s_resources:
      description: deploy_k8s_resources
      steps:
        - run: 
            name: deploy_k8s_resources
            command: |              
              kubectl apply -f ./deployment --recursive
              for i in {1..5}
              do
                kubectl get all --all-namespaces
              done

jobs:
  build-docker-images:
    docker:
      - image: cimg/node:18.10.0
    steps:
      - setup_remote_docker:
          version: 20.10.14
      - checkout
      - install_aws_cli
      - install_aws_iam_auth
      - install_kubectl
      - install_helm
      - login-to-docker
      - build-docker-images
      - push-docker-images
      - login-to-aws
      - configure_kubectl
      

workflows:
  create-app:
    jobs:
      - build-docker-images